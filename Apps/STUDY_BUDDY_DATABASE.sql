CREATE SCHEMA STUDYBUDDY;

CREATE TABLE STUDYBUDDY.USERS (
	USERS_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    USERS_NICKNAME VARCHAR(50) NOT NULL,
    USERS_NAME VARCHAR(50) NOT NULL,
    USERS_NUMBER VARCHAR(15) NOT NULL,
    USERS_EMAIL VARCHAR(30) NOT NULL,
    USERS_PASSWORD VARCHAR(20) NOT NULL,
    USERS_ROLE ENUM('S', 'M') NOT NULL,
    USERS_WALLET DECIMAL(10, 2) NOT NULL
);

CREATE TABLE STUDYBUDDY.STUDENT (
	STUDENT_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    USERS_ID INT NOT NULL,
    STUDENT_EDU ENUM('SMP', 'SMA'),
    FOREIGN KEY (USERS_ID) 
		REFERENCES STUDYBUDDY.USERS(USERS_ID)
);

CREATE TABLE STUDYBUDDY.MENTOR (
	MENTOR_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    USERS_ID INT NOT NULL,
    MENTOR_SUBJECT ENUM('BINDO', 'BINGGRIS', 'MATEMATIKA', 'FISIKA', 'KIMIA', 'BIOLOGI', 'EKONOMI', 'SOSIOLOGI', 'SEJARAH', 'GEOGRAFIS'),
    MENTOR_STATUS ENUM('GURU', 'MAHASISWA'),
    MENTOR_PRICE DECIMAL(10, 2),
    MENTOR_RATING DECIMAL(3, 2),
    FOREIGN KEY (USERS_ID) 
		REFERENCES STUDYBUDDY.USERS(USERS_ID)
);

CREATE TABLE STUDYBUDDY.PAYMENT (
	PAYMENT_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    STUDENT_ID INT NOT NULL,
    MENTOR_ID INT NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    PAYMENT_AMOUNT DECIMAL(10, 2),
    FOREIGN KEY (STUDENT_ID) 
		REFERENCES STUDYBUDDY.STUDENT(STUDENT_ID),
    FOREIGN KEY (MENTOR_ID) 
		REFERENCES STUDYBUDDY.MENTOR(MENTOR_ID)
);

CREATE TABLE STUDYBUDDY.SCHEDULES (
	SCHEDULE_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	STUDENT_ID INT NOT NULL,
    MENTOR_ID INT NOT NULL,
    SCHEDULE_DATE DATE NOT NULL,
    SCHEDULE_TIME TIME NOT NULL,
    SCHEDULE_STATUS ENUM('PENDING', 'APPROVED', 'REJECTED') NOT NULL,
    FOREIGN KEY (STUDENT_ID) 
		REFERENCES STUDYBUDDY.STUDENT(STUDENT_ID),
    FOREIGN KEY (MENTOR_ID) 
		REFERENCES STUDYBUDDY.MENTOR(MENTOR_ID)
);

CREATE TABLE STUDYBUDDY.INBOX (
	MESSAGE_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    SENDER_ID INT NOT NULL,
    RECEIVER_ID INT NOT NULL,
    MESSAGE_SUBJECT TEXT NOT NULL,
    MESSAGE_CONTENT VARCHAR(100) NOT NULL,
    MESSAGE_TIME TIMESTAMP NOT NULL,
	FOREIGN KEY (SENDER_ID) 
		REFERENCES STUDYBUDDY.MENTOR(MENTOR_ID),
    FOREIGN KEY (RECEIVER_ID) 
		REFERENCES STUDYBUDDY.STUDENT(STUDENT_ID)
)
